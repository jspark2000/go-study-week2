// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum JudgeResult {
  Judging
  Accepted
  NotAnswer
  Error
}

model Submission {
  id             Int              @id @default(autoincrement())
  problemId      Int              @map("problem_id")
  code           String           @db.Text
  createTime     DateTime         @default(now()) @map("create_time")
  result         JudgeResult      @default(Judging)
  Problem        Problem          @relation(fields: [problemId], references: [id])
  TestcaseResult TestcaseResult[]
}

model TestcaseResult {
  submissionId Int         @map("testcase_result")
  testcaseId   Int         @map("testcase_id")
  result       JudgeResult @default(Judging)

  submission Submission @relation(fields: [submissionId], references: [id])
  testcase   Testcase   @relation(fields: [testcaseId], references: [id])
  createTime DateTime   @default(now()) @map("create_time")

  @@unique([submissionId, testcaseId])
}

model Problem {
  id          Int          @id @default(autoincrement())
  content     String       @db.Text
  submissions Submission[]
  testcases   Testcase[]
}

model Testcase {
  id             Int              @id @default(autoincrement())
  problemId      Int              @map("problem_id")
  in             String           @db.VarChar(128)
  out            String           @db.VarChar(128)
  Problem        Problem          @relation(fields: [problemId], references: [id])
  TestcaseResult TestcaseResult[]
}
